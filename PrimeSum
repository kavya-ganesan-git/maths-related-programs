/*Prime Sum
Problem Description
Given an even number A ( greater than 2 ), return two prime numbers whose sum will be
equal to the given number.
If there is more than one solution possible, return the lexicographically smaller solution.
If [a, b] is one solution with a <= b, and [c,d] is another
solution with c <= d, then
[a, b] < [c, d], If a < c OR a==c AND b < d.
NOTE: A solution will always exist. Read Goldbach's conjecture.
Problem Constraints
4 <= A <= 2*107
Input Format
First and only argument of input is an even number A.
Output Format
Return a integer array of size 2 containing primes whose sum will be equal to given
number.
Example Input
4
3
Example Output
[2, 2]
Example Explanation
There is only 1 solution for A = 4.
*/

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	   Scanner s=new Scanner(System.in);
	   int n=s.nextInt();
	   int prime[]=new int[n];
	   int k=0;
	   for(int i=2;i<n;i++)
	   {
	       int flag=0;
	       for(int j=2;j<=Math.sqrt(i);j++)
	       {
	           if(i%j==0 && i!=j)
	           {
	               flag=1;
	           }
	       }
	       if(flag!=1)
	       {
	           prime[k++]=i;
	       }
	   }
	   for(int i=0;i<k;i++)
	   {
	       System.out.println(prime[i]);
	   }
	   for(int i=0;i<k;i++)
	   {
	       for(int j=i;j<k;j++)
	       {
	           if(prime[i]+prime[j]==n)
	           {
	               System.out.println("["+prime[i]+","+prime[j]+"]");
	           }
	       }
	   }
	}
}
